name: test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'
      - run: npm ci
      - run: npm test
      - name: comment coverage
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const lcov = fs.readFileSync('coverage/lcov.info', 'utf8');
            const total = [...lcov.matchAll(/^LF:(\\d+)$/gm)].reduce((a, m) => a + Number(m[1]), 0) || 1;
            const hit = [...lcov.matchAll(/^LH:(\\d+)$/gm)].reduce((a, m) => a + Number(m[1]), 0);
            const pct = ((hit / total) * 100).toFixed(2);
            const body = `<!-- coverage-comment -->\nTotal coverage: **${pct}%**`;
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const existing = comments.find(c => c.body.startsWith('<!-- coverage-comment -->'));
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            }
